<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Jimmy&#39;s Blog</title>
    <link>https://chickenpopcorn.github.io/my-personal-blog/tags/go/</link>
    <description>Recent content in Go on Jimmy&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 Feb 2018 23:58:50 -0500</lastBuildDate>
    
	<atom:link href="https://chickenpopcorn.github.io/my-personal-blog/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang Array and Slice Basics</title>
      <link>https://chickenpopcorn.github.io/my-personal-blog/post/golang-array-slice-basic/</link>
      <pubDate>Sun, 04 Feb 2018 23:58:50 -0500</pubDate>
      
      <guid>https://chickenpopcorn.github.io/my-personal-blog/post/golang-array-slice-basic/</guid>
      <description>Basics in Go Array There two types of array like data structure in go, array and slice. Array is a value type structure with fix length. See Example Below
package main import &amp;quot;fmt&amp;quot; func main() { // Example 1: basic syntax var arr1 [5]int arr2 := [3]int{1, 3, 5} arr3 := [...]int{2, 4} fmt.Println(arr1, arr2, arr3) var grid [4][5]int fmt.Println(grid) // Prints out // [0 0 0 0 0] [1 3 5] [2 4] // [[0 0 0 0 0] [0 0 0 0 0] [0 0 0 0 0] [0 0 0 0 0]] }  What&amp;rsquo;s more interesting is array is a value type structure with fix length.</description>
    </item>
    
  </channel>
</rss>